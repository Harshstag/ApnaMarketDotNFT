{"ast":null,"code":"var _jsxFileName = \"D:\\\\nftMkt\\\\NFTMarketplaceReact2\\\\src\\\\components\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport \"./NFTpage.css\";\nimport Navbar from \"./Navbar\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport MarketplaceJSON from \"../Marketplace.json\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport NFTTile from \"./NFTTile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Profile() {\n  _s();\n  const [data, updateData] = useState([]);\n  const [dataFetched, updateFetched] = useState(false);\n  const [address, updateAddress] = useState(\"0x\");\n  const [totalPrice, updateTotalPrice] = useState(\"0\");\n  async function getNFTData(tokenId) {\n    const ethers = require(\"ethers\");\n    let sumPrice = 0;\n    //After adding your Hardhat network to your metamask, this code will get providers and signers\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const addr = await signer.getAddress();\n\n    //Pull the deployed contract instance\n    let contract = new ethers.Contract(MarketplaceJSON.address, MarketplaceJSON.abi, signer);\n\n    //create an NFT Token\n    let transaction = await contract.getMyNFTs();\n\n    /*\n     * Below function takes the metadata from tokenURI and the data returned by getMyNFTs() contract function\n     * and creates an object of information that is to be displayed\n     */\n\n    const items = await Promise.all(transaction.map(async i => {\n      const tokenURI = await contract.tokenURI(i.tokenId);\n      let meta = await axios.get(tokenURI);\n      meta = meta.data;\n      let price = ethers.utils.formatUnits(i.price.toString(), \"ether\");\n      let item = {\n        price,\n        tokenId: i.tokenId.toNumber(),\n        seller: i.seller,\n        owner: i.owner,\n        image: meta.image,\n        name: meta.name,\n        description: meta.description\n      };\n      sumPrice += Number(price);\n      return item;\n    }));\n    updateData(items);\n    updateFetched(true);\n    updateAddress(addr);\n    updateTotalPrice(sumPrice.toPrecision(3));\n  }\n  const params = useParams();\n  const tokenId = params.tokenId;\n  if (!dataFetched) getNFTData(tokenId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profileClass\",\n    style: {\n      \"min-height\": \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profileClass\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col place-items-center mt-20\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wallet-address\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"font-bold \",\n            children: \"Wallet Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-nfts flex flex-row text-center justify-center mt-10 md:text-2xl text-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wallet-nfts\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"font-bold\",\n            children: \"No. of NFTs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), data.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wallet-nfts\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"font-bold\",\n            children: \"Total Value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), totalPrice, \" ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col text-center items-center mt-11 text-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          class: \"text-2xl font-bold dark:text-white\",\n          children: \"Your NFTs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center flex-wrap max-w-screen-xl mt-11\",\n          children: data.map((value, index) => {\n            return /*#__PURE__*/_jsxDEV(NFTTile, {\n              data: value\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-10 text-xl\",\n          children: data.length === 0 ? \"Oops, No NFT data to display (Are you logged in?)\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(Profile, \"2EsCq+A3YKmNbGfcrpDlqLJtmds=\", false, function () {\n  return [useParams];\n});\n_c = Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["Navbar","useLocation","useParams","MarketplaceJSON","axios","useState","NFTTile","jsxDEV","_jsxDEV","Profile","_s","data","updateData","dataFetched","updateFetched","address","updateAddress","totalPrice","updateTotalPrice","getNFTData","tokenId","ethers","require","sumPrice","provider","providers","Web3Provider","window","ethereum","signer","getSigner","addr","getAddress","contract","Contract","abi","transaction","getMyNFTs","items","Promise","all","map","i","tokenURI","meta","get","price","utils","formatUnits","toString","item","toNumber","seller","owner","image","name","description","Number","toPrecision","params","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","length","class","value","index","_c","$RefreshReg$"],"sources":["D:/nftMkt/NFTMarketplaceReact2/src/components/Profile.js"],"sourcesContent":["import \"./NFTpage.css\";\n\nimport Navbar from \"./Navbar\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport MarketplaceJSON from \"../Marketplace.json\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport NFTTile from \"./NFTTile\";\n\nexport default function Profile() {\n  const [data, updateData] = useState([]);\n  const [dataFetched, updateFetched] = useState(false);\n  const [address, updateAddress] = useState(\"0x\");\n  const [totalPrice, updateTotalPrice] = useState(\"0\");\n\n  async function getNFTData(tokenId) {\n    const ethers = require(\"ethers\");\n    let sumPrice = 0;\n    //After adding your Hardhat network to your metamask, this code will get providers and signers\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const addr = await signer.getAddress();\n\n    //Pull the deployed contract instance\n    let contract = new ethers.Contract(\n      MarketplaceJSON.address,\n      MarketplaceJSON.abi,\n      signer\n    );\n\n    //create an NFT Token\n    let transaction = await contract.getMyNFTs();\n\n    /*\n     * Below function takes the metadata from tokenURI and the data returned by getMyNFTs() contract function\n     * and creates an object of information that is to be displayed\n     */\n\n    const items = await Promise.all(\n      transaction.map(async (i) => {\n        const tokenURI = await contract.tokenURI(i.tokenId);\n        let meta = await axios.get(tokenURI);\n        meta = meta.data;\n\n        let price = ethers.utils.formatUnits(i.price.toString(), \"ether\");\n        let item = {\n          price,\n          tokenId: i.tokenId.toNumber(),\n          seller: i.seller,\n          owner: i.owner,\n          image: meta.image,\n          name: meta.name,\n          description: meta.description,\n        };\n        sumPrice += Number(price);\n        return item;\n      })\n    );\n\n    updateData(items);\n    updateFetched(true);\n    updateAddress(addr);\n    updateTotalPrice(sumPrice.toPrecision(3));\n  }\n\n  const params = useParams();\n  const tokenId = params.tokenId;\n  if (!dataFetched) getNFTData(tokenId);\n  return (\n    <div className=\"profileClass\" style={{ \"min-height\": \"100vh\" }}>\n      <Navbar></Navbar>\n      <div className=\"profileClass\">\n        <div className=\"flex flex-col place-items-center mt-20\">\n          <div className=\"wallet-address\">\n            <h2 className=\"font-bold \">Wallet Address</h2>\n            {address}\n          </div>\n        </div>\n        <div className=\"wallet-nfts flex flex-row text-center justify-center mt-10 md:text-2xl text-white\">\n          <div className=\"wallet-nfts\">\n            <h2 className=\"font-bold\">No. of NFTs</h2>\n            {data.length}\n          </div>\n          <div className=\"wallet-nfts\">\n            <h2 className=\"font-bold\">Total Value</h2>\n            {totalPrice} ETH\n          </div>\n        </div>\n        <div className=\"flex flex-col text-center items-center mt-11 text-white\">\n          <h4 class=\"text-2xl font-bold dark:text-white\">Your NFTs</h4>\n          <div className=\"flex justify-center flex-wrap max-w-screen-xl mt-11\">\n            {data.map((value, index) => {\n              return <NFTTile data={value} key={index}></NFTTile>;\n            })}\n          </div>\n          <div className=\"mt-10 text-xl\">\n            {data.length === 0\n              ? \"Oops, No NFT data to display (Are you logged in?)\"\n              : \"\"}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}